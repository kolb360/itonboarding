# .github/workflows/process-onboarding.yml
name: Process IT Onboarding Requests

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true
        type: number
  issues:
    types: [opened]

jobs:
  process-onboarding:
    # Allow both manual dispatch or new issues labeled IT-Onboarding
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.issue.labels.*.name, 'IT-Onboarding') }}
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Fetch issue when manually dispatched
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        id: fetch_issue
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.inputs.issue_number
            });
            return issue.data;

      - name: Prepare issue data
        run: |
          mkdir -p data
          # Export fetched or event issue into env
          if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
            echo "ISSUE_BODY<<EOF" >> $GITHUB_ENV
            echo "${{ steps.fetch_issue.outputs.result.body }}" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            echo "ISSUE_TITLE=${{ steps.fetch_issue.outputs.result.title }}" >> $GITHUB_ENV
            echo "ISSUE_NUMBER=${{ steps.fetch_issue.outputs.result.number }}" >> $GITHUB_ENV
          else
            echo "ISSUE_BODY<<EOF" >> $GITHUB_ENV
            echo "${{ github.event.issue.body }}" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
            echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          fi

      - name: Extract issue data and create XML
        run: |
          cat << 'EOF' > process_onboarding.js
          // (Same Node.js script as before, escaped fields etc.)
          EOF
          node process_onboarding.js
        env:
          ISSUE_BODY:   ${{ env.ISSUE_BODY }}
          ISSUE_TITLE:  ${{ env.ISSUE_TITLE }}
          ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}

      - name: Commit XML changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name  "github-actions[bot]"
          if [[ -n $(git status --porcelain) ]]; then
            git add data/work_orders.xml
            git commit -m "ü§ñ Add IT onboarding request from issue #${{ env.ISSUE_NUMBER }}"
            git push
            echo "XML_UPDATED=true" >> $GITHUB_ENV
          else
            echo "XML_UPDATED=false" >> $GITHUB_ENV
          fi

      - name: Update issue with success comment
        if: env.XML_UPDATED == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const repoUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}`;
            const fileLink = `${repoUrl}/blob/main/data/work_orders.xml`;
            const comment = `## ‚úÖ Onboarding Request Processed Successfully!\n\n` +
              `Your IT onboarding request has been processed and added to data/work_orders.xml.\n` +
              `**View file:** [data/work_orders.xml](${fileLink})\n\n` +
              `*Processed at ${new Date().toISOString()}*`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['‚úÖ Processed']
            });

      - name: Handle processing failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const repoUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ‚ùå Processing Failed\n\n` +
                    `There was an error processing this onboarding request. Check [workflow run](${repoUrl}/actions) for details.`
            });
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['‚ùå Failed', 'üö® Manual Review Needed']
            });
